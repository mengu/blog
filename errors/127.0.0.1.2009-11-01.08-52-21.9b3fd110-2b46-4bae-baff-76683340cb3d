(dp1
S'output'
p2
S''
sS'layer'
p3
S'/home/mengu/projects/web2py/applications/blog/controllers/default.py'
p4
sS'code'
p5
S'# coding: utf8\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################  \npages = db(db.page.id > 0).select()\nfrom gluon.contrib.markdown import WIKI\nimport math\ndef index():\n\t\tlimit = 1\n\t\tpage = int(request.vars.page) if request.vars.page else 0\n\t\ttotalposts = db(db.post.id > 0).count()\n\t\ttotalpages = int(totalposts / limit\n\t\tposts = db(db.post.id > 0).select(limitby=(page,page+limit))\n\t\tfor i in range(len(posts)):\n\t\t\tcategories = {}\n\t\t\tfor relation in posts[i].relations.select():\n\t\t\t\tcategories[relation.category] = relation.category.title\n\t\t\t\tposts[i].categories = categories\n\t\treturn dict(posts=posts, pages=pages, selectedpage=1, totalpages=totalpages)\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login \n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    session.forget()\n    return service()\n\nresponse._vars=response._caller(index)\n'
p6
sS'traceback'
p7
S'Traceback (most recent call last):\n  File "/home/mengu/projects/web2py/gluon/restricted.py", line 182, in restricted\n    ccode = compile(code.replace(\'\\r\\n\', \'\\n\'), layer, \'exec\')\n  File "/home/mengu/projects/web2py/applications/blog/controllers/default.py", line 18\n    posts = db(db.post.id > 0).select(limitby=(page,page+limit))\n        ^\nSyntaxError: invalid syntax\n'
p8
s.