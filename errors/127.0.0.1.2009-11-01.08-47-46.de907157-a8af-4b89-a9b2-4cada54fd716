(dp1
S'output'
p2
S''
sS'layer'
p3
S'/home/mengu/projects/web2py/applications/blog/controllers/post.py'
p4
sS'code'
p5
S'# coding: utf8\n# try something like\npages = db(db.page.id > 0).select()\ncategories = db(db.category.id > 0).select(orderby=db.category.title)\ndef index():\n    posts = db(db.post.id > 0).select()\n    for i in range(len(posts)):\n    \tfor relation in posts[i].relations.select():\n    \t\tposts[i].categories = relation.category.title.join(",")\n    return dict(posts=posts, pages=pages)\n    \ndef view():\n\t\tpost = db.post[request.args(0)]\n\t\tcategories = {}\n\t\tfor relation in post.relations.select():\n\t\t\tcategories[relation.category] = relation.category.title\n\t\t\tpost.categories = categories\n\t\treturn dict(post=post, pages=pages, selectedpage=0)\n    \ndef new():\n\tcategorylist = str()\n\tj = 1\n\tfor i in range(len(categories)):\n\t\tcategorylist += str(INPUT(_type="checkbox", _name="categories", _value=categories[i].id))+categories[i].title+" "\n\t\tif j % 4 == 0: categorylist += "<br />"\n\t\tj = j + 1\n\treturn dict(categories=categorylist, pages=pages, selectedpage=0)\n\t\ndef edit():\n\tpost = db.post[request.args(0)]\n\tpostcategories = [relation.category for relation in post.relations.select()]\n\tcategorylist = str()\n\tj = 1\n\tfor i in range(len(categories)):\n\t\tif categories[i].id in postcategories:\n\t\t\tcategorylist += str(INPUT(_type="checkbox", _name="categories", _value=categories[i].id, value="on"))+categories[i].title+" "\n\t\telse:\n\t\t\tcategorylist += str(INPUT(_type="checkbox", _name="categories", _value=categories[i].id))+categories[i].title+" "\n\t\tif j % 4 == 0: categorylist += "<br />"\n\t\tj = j + 1\n\treturn dict(post=post, categories=categorylist, pages=pages, selectedpage=0)\n\ndef create():\n\ttitle = request.vars.title\n\tbody = request.vars.body\n\tpost = db.post.insert(title=title, body=body)\n\tif post.id:\n\t\tfor category in request.vars.categories:\n\t\t\tdb.relations.insert(post=post.id, category=category)\n\tredirect(URL(r=request, f="view", args=post.id))\t\n\ndef update():\n\ttitle = request.vars.title\n\tbody = request.vars.body\n\tpost = db.post[request.vars.postid]\n\tpostcategories = [relation.category for relation in post.relations.select()]\n\tdb(db.post.id == post.id).update(title=title, body=body)\n\t# update categories.\n\trequest.vars.categories = [request.vars.categories] if len(request.vars.categories==1) else request.vars.categories\n\ti = 0\n\tfor pcategory in request.vars.categories:\n\t\trequest.vars.categories[i] = int(request.vars.categories[i])\n\t\tif int(pcategory) not in postcategories:\n\t\t\tdb.relations.insert(post=post.id, category=pcategory)\n\t\ti = i + 1\n\tfor ecategory in postcategories:\n\t\tif ecategory not in request.vars.categories:\n\t\t\tdb((db.relations.category==ecategory)&(db.relations.post==request.vars.postid)).delete()\n\tredirect(URL(r=request, f="view", args=post.id))\n\nresponse._vars=response._caller(update)\n'
p6
sS'traceback'
p7
S'Traceback (most recent call last):\n  File "/home/mengu/projects/web2py/gluon/restricted.py", line 184, in restricted\n    exec ccode in environment\n  File "/home/mengu/projects/web2py/applications/blog/controllers/post.py", line 71, in <module>\n  File "/home/mengu/projects/web2py/gluon/globals.py", line 103, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/mengu/projects/web2py/applications/blog/controllers/post.py", line 59, in update\n    request.vars.categories = [request.vars.categories] if len(request.vars.categories==1) else request.vars.categories\nTypeError: object of type \'bool\' has no len()\n'
p8
s.