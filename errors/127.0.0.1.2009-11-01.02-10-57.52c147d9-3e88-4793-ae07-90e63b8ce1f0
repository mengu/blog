(dp1
S'output'
p2
S''
sS'layer'
p3
S'/home/mengu/projects/web2py/applications/blog/views/appadmin.html'
p4
sS'code'
p5
S'response.write(\'<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\\n<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="\',escape=False)\nresponse.write(T.accepted_language or \'en\')\nresponse.write(\'">\\n  <head>\\n    <title>\',escape=False)\nresponse.write(response.title or request.application)\nresponse.write(\'</title>\\n    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />\\n    \\n    \',escape=False)\nresponse.files.append(URL(request.application,\'static\',\'blog.css\'))\nresponse.write(\'\\n    \',escape=False)\nresponse.files.insert(0,URL(r=request,c=\'static\',f=\'jquery.js\'))\nresponse.files.insert(1,URL(r=request,c=\'static\',f=\'calendar.css\'))\nresponse.files.insert(2,URL(r=request,c=\'static\',f=\'calendar.js\'))\nfor _item in response.meta or []:\n    response.write(\'\\n     <meta name="\',escape=False)\n    response.write(_item)\n    response.write(\'" content="\',escape=False)\n    response.write(response.meta[_item])\n    response.write(\'" />\',escape=False)\n    pass\nfor _file in tuple(set(response.files or [])):\n    if _file[-4:].lower()==\'.css\':\n        response.write(\'\\n     <link href="\',escape=False)\n        response.write(_file)\n        response.write(\'" rel="stylesheet" type="text/css" charset="utf-8" />\',escape=False)\n    elif _file[-3:].lower()==\'.js\':\n        response.write(\'\\n     <script src="\',escape=False)\n        response.write(_file)\n        response.write(\'" type="text/javascript"></script>\',escape=False)\n        pass\n    pass\nresponse.write(\'\\n<script type="text/javascript"><!--\\nfunction popup(url) {\\n  newwindow=window.open(url,\\\'name\\\',\\\'height=400,width=600\\\');\\n  if (window.focus) newwindow.focus();\\n  return false;\\n}\\nfunction collapse(id) { jQuery(\\\'#\\\'+id).slideToggle(); }\\nfunction fade(id,value) { if(value>0) jQuery(\\\'#\\\'+id).hide().fadeIn(\\\'slow\\\'); else jQuery(\\\'#\\\'+id).show().fadeOut(\\\'slow\\\'); }\\nfunction ajax(u,s,t) {\\n  var query="";\\n  for(i=0; i<s.length; i++) { \\n     if(i>0) query=query+"&";\\n     query=query+encodeURIComponent(s[i])+"="+encodeURIComponent(document.getElementById(s[i]).value);\\n  }\\n  jQuery.ajax({type: "POST", url: u, data: query, success: function(msg) { if(t==\\\':eval\\\') eval(msg); else document.getElementById(t).innerHTML=msg; } });  \\n}\\nString.prototype.reverse = function () { return this.split(\\\'\\\').reverse().join(\\\'\\\');};\\nfunction web2py_ajax_init() {\\n  jQuery(\\\'.hidden\\\').hide();\\n  jQuery(\\\'.error\\\').hide().slideDown(\\\'slow\\\');\\n  jQuery(\\\'.flash\\\').click(function() { jQuery(this).fadeOut(\\\'slow\\\'); return false; });\\n  jQuery(\\\'input.string\\\').attr(\\\'size\\\',50);\\n  jQuery(\\\'textarea.text\\\').attr(\\\'cols\\\',50).attr(\\\'rows\\\',10);\\n  jQuery(\\\'input.integer\\\').keyup(function(){this.value=this.value.reverse().replace(/[^0-9\\\\-]|\\\\-(?=.)/g,\\\'\\\').reverse();});\\n  jQuery(\\\'input.double\\\').keyup(function(){this.value=this.value.reverse().replace(/[^0-9\\\\-\\\\.]|[\\\\-](?=.)|[\\\\.](?=[0-9]*[\\\\.])/g,\\\'\\\').reverse();});\\n  jQuery(\\\'input.delete\\\').attr(\\\'onclick\\\',\\\'if(this.checked) if(!confirm("\',escape=False)\nresponse.write(T(\'Sure you want to delete this object?\'))\nresponse.write(\'")) this.checked=false;\\\');\\n  try {jQuery("input.date").focus( function() {Calendar.setup({\\n     inputField:this.id, ifFormat:"\',escape=False)\nresponse.write(T(\'%Y-%m-%d\'))\nresponse.write(\'", showsTime:false\\n  }); }); } catch(e) {};\\n  try { jQuery("input.datetime").focus( function() {Calendar.setup({\\n     inputField:this.id, ifFormat:"\',escape=False)\nresponse.write(T(\'%Y-%m-%d %H:%M:%S\'))\nresponse.write(\'", showsTime: true,timeFormat: "24"\\n  }); }); } catch(e) {};\\n  try { jQuery("input.time").clockpick({\\n      starthour:0, endhour:23, showminutes:true, military:true\\n  }); } catch(e) {};\\n};\\njQuery(document).ready(function(){\\n   jQuery(\\\'.flash\\\').hide();\\n   if(jQuery(\\\'.flash\\\').html()!=\\\'\\\') jQuery(\\\'.flash\\\').slideDown(\\\'slow\\\');\\n   web2py_ajax_init();});\\n\\nfunction web2py_trap_form(action,target) {\\n   jQuery(\\\'#\\\'+target+\\\' form\\\').each(function(i){\\n      var form=jQuery(this);\\n      jQuery(\\\'input[type="submit"]\\\',this).click(function(){\\n         jQuery(\\\'.flash\\\').hide().html(\\\'\\\');\\n         web2py_ajax_page(\\\'post\\\',action,form.serialize(),target);\\n         return false;\\n      });\\n   });\\n}\\nfunction web2py_ajax_page(method,action,data,target) {\\n  jQuery.ajax({\\\'type\\\':method,\\\'url\\\':action,\\\'data\\\':data,\\n    \\\'beforeSend\\\':function(xhr){\\n      xhr.setRequestHeader(\\\'web2py-component-location\\\',document.location);\\n      xhr.setRequestHeader(\\\'web2py-component-element\\\',target);},\\n    \\\'complete\\\':function(xhr,text){\\n      command=xhr.getResponseHeader(\\\'web2py-component-command\\\');\\n      if(command) eval(command);\\n      flash=xhr.getResponseHeader(\\\'web2py-component-flash\\\');\\n      if(flash) jQuery(\\\'.flash\\\').html(flash).slideDown();\\n      },\\n    \\\'success\\\': function(text) {\\n      jQuery(\\\'#\\\'+target).html(text);\\n      web2py_trap_form(action,target);\\n      web2py_ajax_init();\\n      }\\n    });\\n}\\nfunction web2py_component(action,target) {\\n    jQuery(document).ready(function(){ web2py_ajax_page(\\\'get\\\',action,null,target); });\\n}\\n//--></script>\\n\\n  </head>\\n  <body>\\n  \\t<div>\\n\\t\\t\\t<div id="header" style="padding-left: 150px;">\\n\\t\\t\\t<div style="padding-top: 20px;">\\n\\t\\t\\t<div class="logo"><a href="\',escape=False)\nresponse.write( URL(request.application, c="post", f="index"))\nresponse.write(\'"><span class="f">M</span>ENGU.</div><div class="logo"><span class="f">N</span>ET</div></a></div>\\n\\t\\t\\t<div class="description">mengu\\\'s personal blog on web programming.</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div id="menu">\\n\\t\\t\\t\\t<!--ul>\\n\\t\\t\\t\\t\\t\',escape=False)\nfor page in pages:\n    response.write(\'\\n\\t\\t\\t\\t\\t<li><a href="\',escape=False)\n    response.write( URL(request.application, c="page", f="view", args=page.id))\n    response.write(\'"></a></li>\\n\\t\\t\\t\\t\\t\',escape=False)\n    pass\nresponse.write(\'\\n\\t\\t\\t\\t</ul-->\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n<script><!--\\njQuery(document).ready(function(){\\n  jQuery("table.sortable tbody tr").mouseover( function() {\\n     jQuery(this).addClass("highlight"); }).mouseout( function() { \\n     jQuery(this).removeClass("highlight"); });\\n  jQuery(\\\'table.sortable tbody tr:odd\\\').addClass(\\\'odd\\\');\\n  jQuery(\\\'table.sortable tbody tr:even\\\').addClass(\\\'even\\\');\\n});\\n//--></script>\\n\\n\',escape=False)\nif request.function==\'index\':\n    response.write(\'\\n  <h1>\',escape=False)\n    response.write(T("Available databases and tables"))\n    response.write(\'</h1>\\n  \',escape=False)\n    if not databases:\n        response.write(\'\',escape=False)\n        response.write(T("No databases in this application"))\n        response.write(\'\',escape=False)\n        pass\n    response.write(\'\\n  \',escape=False)\n    for db in sorted(databases):\n        response.write(\'\\n    \',escape=False)\n        for table in databases[db].tables:\n            response.write(\'\\n      \',escape=False)\n            qry=\'%s.%s.id>0\'%(db,table)\n            response.write(\'\\n      \',escape=False)\n            tbl=databases[db][table]\n            response.write(\'\\n      \',escape=False)\n            if hasattr(tbl,\'_primarykey\'):\n                response.write(\'\\n        \',escape=False)\n                firstkey=tbl[tbl._primarykey[0]]\n                response.write(\'\\n        \',escape=False)\n                if firstkey.type in [\'string\',\'text\']:\n                    response.write(\'\\n          \',escape=False)\n                    qry=\'%s.%s.%s!=""\'%(db,table,firstkey.name)\n                    response.write(\'\\n        \',escape=False)\n                else:\n                    response.write(\'\\n          \',escape=False)\n                    qry=\'%s.%s.%s>0\'%(db,table,firstkey.name)\n                    response.write(\'\\n        \',escape=False)\n                    pass\n                response.write(\'\\n      \',escape=False)\n                pass\n            response.write(\'\\n      <h2>\',escape=False)\n            response.write(A("%s.%s"%(db,table),_href=URL(r=request,f=\'select\',args=[db],vars=dict(query=qry))))\n            response.write(\'</h2>\\n      [ \',escape=False)\n            response.write(A(str(T(\'insert new\'))+\' \'+table,_href=URL(r=request,f=\'insert\',args=[db,table])))\n            response.write(\' ]\\n    <br /><br />\\n    \',escape=False)\n            pass\n        response.write(\'\\n  \',escape=False)\n        pass\n    response.write(\'\\n\\n\\n\',escape=False)\nelif request.function==\'select\':\n    response.write(\'\\n  <h1>\',escape=False)\n    response.write(XML(str(T("database %s select"))%A(request.args[0],_href=URL(r=request,f=\'index\'))) )\n    response.write(\'\\n  </h1>\\n   \',escape=False)\n    if table:\n        response.write(\'\\n  [ \',escape=False)\n        response.write(A(str(T(\'insert new %s\'))%table,_href=URL(r=request,f=\'insert\',args=[request.args[0],table])))\n        response.write(\' ]<br/><br/>\\n    <h2>\',escape=False)\n        response.write(T("Rows in table"))\n        response.write(\'</h2><br/>\\n   \',escape=False)\n    else:\n        response.write(\'\\n    <h2>\',escape=False)\n        response.write(T("Rows selected"))\n        response.write(\'</h2><br/>\\n   \',escape=False)\n        pass\n    response.write(\'\\n   \',escape=False)\n    response.write(form)\n    response.write(\'\\n   <p>\',escape=False)\n    response.write(T(\'The "query" is a condition like "db.table1.field1==\\\'value\\\'". Something like "db.table1.field1==db.table2.field2" results in a SQL JOIN.\'))\n    response.write(\'<br/>\\n      \',escape=False)\n    response.write(T(\'Use (...)&(...) for AND, (...)|(...) for OR, and ~(...)  for NOT to build more complex queries.\'))\n    response.write(\'<br/>\\n      \',escape=False)\n    response.write(T(\'"update" is an optional expression like "field1=\\\'newvalue\\\'". You cannot update or delete the results of a JOIN\'))\n    response.write(\'</p>\\n    <br/><br/>\\n    <h3>\',escape=False)\n    response.write(nrows)\n    response.write(\' \',escape=False)\n    response.write(T("selected"))\n    response.write(\'</h3>\\n    \',escape=False)\n    if start>0:\n        response.write(\'[ \',escape=False)\n        response.write(A(T(\'previous 100 rows\'),_href=URL(r=request,f=\'select\',args=request.args[0],vars=dict(start=start-100))))\n        response.write(\' ]\',escape=False)\n        pass\n    response.write(\'\\n    \',escape=False)\n    if stop<nrows:\n        response.write(\'[ \',escape=False)\n        response.write(A(T(\'next 100 rows\'),_href=URL(r=request,f=\'select\',args=request.args[0],vars=dict(start=start+100))))\n        response.write(\' ]\',escape=False)\n        pass\n    response.write(\'    \\n    \',escape=False)\n    if rows:\n        response.write(\'\\n       <div style="overflow: auto;" width="80%">\\n       \',escape=False)\n        linkto=URL(r=request,f=\'update\',args=request.args[0])\n        response.write(\'\\n       \',escape=False)\n        upload=URL(r=request,f=\'download\',args=request.args[0])\n        response.write(\'    \\n       \',escape=False)\n        response.write(SQLTABLE(rows,linkto,upload,orderby=True,_class=\'sortable\'))\n        response.write(\'\\n       </div>\\n    \',escape=False)\n        pass\n    response.write(\'\\n    <br/><br/><h2>\',escape=False)\n    response.write(T("Import/Export"))\n    response.write(\'</h2><br/>\\n    [ <a href="\',escape=False)\n    response.write(URL(r=request,f=\'csv\',args=request.args[0],vars=dict(query=query)))\n    response.write(\'">\',escape=False)\n    response.write(T("export as csv file"))\n    response.write(\'</a> ]\\n  \',escape=False)\n    if table:\n        response.write(\'\\n    \',escape=False)\n        response.write(FORM(str(T(\'or import from csv file\'))+" ",INPUT(_type=\'file\',_name=\'csvfile\'),INPUT(_type=\'hidden\',_value=table,_name=\'table\'),INPUT(_type=\'submit\',_value=\'import\')))\n        response.write(\'\\n  \',escape=False)\n        pass\n    response.write(\'\\n\\n\\n\',escape=False)\nelif request.function==\'insert\':\n    response.write(\'  \\n  <h1>\',escape=False)\n    response.write(T("database"))\n    response.write(\' \',escape=False)\n    response.write(A(request.args[0],_href=URL(r=request,f=\'index\')))\n    response.write(\'\\n    \',escape=False)\n    if hasattr(table,\'_primarykey\'):\n        response.write(\'\\n      \',escape=False)\n        fieldname=table._primarykey[0]\n        response.write(\'\\n      \',escape=False)\n        dbname=request.args[0]\n        response.write(\'\\n      \',escape=False)\n        tablename=request.args[1]\n        response.write(\'\\n      \',escape=False)\n        cond = \'!=""\' if table[fieldname].type in [\'string\',\'text\'] else \'>0\'\n        response.write(\'\\n      \',escape=False)\n        response.write(T("table"))\n        response.write(\' \',escape=False)\n        response.write(A(tablename,_href=URL(r=request,f=\'select\',args=dbname,vars=dict(query=\'%s.%s.%s%s\'%(dbname,tablename,fieldname,cond)))))\n        response.write(\'\\n    \',escape=False)\n    else:\n        response.write(\'  \\n      \',escape=False)\n        response.write(T("table"))\n        response.write(\' \',escape=False)\n        response.write(A(request.args[1],_href=URL(r=request,f=\'select\',args=request.args[0],vars=dict(query=\'%s.%s.id>0\'%tuple(request.args[:2])))))\n        response.write(\'\\n    \',escape=False)\n        pass\n    response.write(\'\\n  </h1>\\n  <h2>\',escape=False)\n    response.write(T("New Record"))\n    response.write(\'</h2><br/>\\n  \',escape=False)\n    response.write(form)\n    response.write(\'\\n\\n\\n\\n\',escape=False)\nelif request.function==\'update\':\n    response.write(\'\\n  <h1>\',escape=False)\n    response.write(T("database"))\n    response.write(\' \',escape=False)\n    response.write(A(request.args[0],_href=URL(r=request,f=\'index\')))\n    response.write(\'\\n    \',escape=False)\n    if hasattr(table,\'_primarykey\'):\n        response.write(\'\\n      \',escape=False)\n        fieldname=request.vars.keys()[0]\n        response.write(\'\\n      \',escape=False)\n        dbname=request.args[0]\n        response.write(\'\\n      \',escape=False)\n        tablename=request.args[1]\n        response.write(\'\\n      \',escape=False)\n        cond = \'!=""\' if table[fieldname].type in [\'string\',\'text\'] else \'>0\'\n        response.write(\'\\n      \',escape=False)\n        response.write(T("table"))\n        response.write(\' \',escape=False)\n        response.write(A(tablename,_href=URL(r=request,f=\'select\',args=dbname,vars=dict(query=\'%s.%s.%s%s\'%(dbname,tablename,fieldname,cond)))))\n        response.write(\'\\n      \',escape=False)\n        response.write(T("record"))\n        response.write(\' \',escape=False)\n        response.write(A(\'%s=%s\'%request.vars.items()[0],_href=URL(r=request,f=\'update\',args=request.args[:2],vars=request.vars)))\n        response.write(\'\\n    \',escape=False)\n    else:\n        response.write(\'\\n      \',escape=False)\n        response.write(T("table"))\n        response.write(\' \',escape=False)\n        response.write(A(request.args[1],_href=URL(r=request,f=\'select\',args=request.args[0],vars=dict(query=\'%s.%s.id>0\'%tuple(request.args[:2])))))\n        response.write(\'\\n      \',escape=False)\n        response.write(T("record id"))\n        response.write(\' \',escape=False)\n        response.write(A(request.args[2],_href=URL(r=request,f=\'update\',args=request.args[:3])))\n        response.write(\'\\n    \',escape=False)\n        pass\n    response.write(\'\\n  </h1>\\n  <h2>\',escape=False)\n    response.write(T("Edit current record"))\n    response.write(\'</h2><br/><br/>\',escape=False)\n    response.write(form)\n    response.write(\'\\n\\n\\n\\n\',escape=False)\nelif request.function==\'state\':\n    response.write(\'\\n  <h1>\',escape=False)\n    response.write(T("Internal State"))\n    response.write(\'</h1>\\n  <h2>\',escape=False)\n    response.write(T("Current request"))\n    response.write(\'</h2>\\n  \',escape=False)\n    response.write(BEAUTIFY(request))\n    response.write(\'\\n  <br/><h2>\',escape=False)\n    response.write(T("Current response"))\n    response.write(\'</h2>\\n  \',escape=False)\n    response.write(BEAUTIFY(response))\n    response.write(\'\\n  <br/><h2>\',escape=False)\n    response.write(T("Current session"))\n    response.write(\'</h2>\\n  \',escape=False)\n    response.write(BEAUTIFY(session))\n    response.write(\'\\n\',escape=False)\n    pass\nresponse.write(\'\\n\\n\\t\\t</div>\\n    \\n  </body>\\n</html>\\n\',escape=False)'
p6
sS'traceback'
p7
S'Traceback (most recent call last):\n  File "/home/mengu/projects/web2py/gluon/restricted.py", line 184, in restricted\n    exec ccode in environment\n  File "/home/mengu/projects/web2py/applications/blog/views/appadmin.html", line 38, in <module>\n    [ {{=A(str(T(\'insert new %s\'))%table,_href=URL(r=request,f=\'insert\',args=[request.args[0],table]))}} ]<br/><br/>\nNameError: name \'pages\' is not defined\n'
p8
s.